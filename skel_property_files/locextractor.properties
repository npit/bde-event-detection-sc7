# extractor config 

# RESTFUL extractor:
##########################
# format:
# -------------
# api=apiBaseURL
# argument=mainCallParameter
# input_format=argument_format
# output_format=apiReturnFormat
# output_filter=keyword // filter return data by this kw
# name_value_pairs=name1=value1,name2=value2,..
# auth=uname:pass	// this will be base64 encoded in the http request
# --------------

# examples:

#poolparty  uses url
# api=https://bde.poolparty.biz/extractor/api/extract
# argument=url
# input_format=text
# output_format=json
# output_filter=locations
# name_value_pairs=language=en,locationExtraction=true,projectId=1DE00F04-C1B9-0001-404F-52256800BE20
# auth=

# climate tagger same, but uses text


# default extractor config
##########################
# the default extractor config provides the ability to manually include additional location names
# and/or substitute matches with other/extra names.
# The articles are checked naively for the inclusion of these names

# Format expected:
# 
# use_extras=yes/no 		// to enable or disable it. Default is no.
# only_use_extras=yes/now   // just check the extra names, do not extract locations as normal
# location1 /// locationOverride *** locationAdditional		// substitution & expansion syntax
#
# Additional location names are added for either a substitution of location1 or a "genuine" ocurrence of locationOverride in the article text.
# For example:
# Exharcheia /// Athens *** Attica
# articles containing "Exarcheia" will be assigned with location Athens INSTEAD of Exharceia. 
# The additional location name "Attica" will also be assigned to that article.
#
# Term omission works as expected, i.e.
# shire *** mordor  will also add mordor to articles containing the shire
# shire /// gondor  will add gondor to articles containing the shire (without adding the shire)

